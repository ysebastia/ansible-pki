---
- name: Generate certificate
  delegate_to: "{{ pki_ca_host }}"
  block:
    - name: Create private key for new certificate
      become: true
      community.crypto.openssl_privatekey:
        path: "{{ pki_ca_path }}private/{{ pki_server_host }}.key"

    - name: Create certificate signing request (CSR) for new certificate
      become: true
      community.crypto.openssl_csr_pipe:
        privatekey_path: "{{ pki_ca_path }}private/{{ pki_server_host }}.key"
        subject_alt_name: "{{ pki_server_san }}"
      register: csr
      changed_when: false

    - name: Check whether certificate exists
      become: true
      ansible.builtin.stat:
        path: "{{ pki_ca_path }}certs/{{ pki_server_host }}.pem"
      register: certificate_exists

    - name: Read existing certificate if exists
      become: true
      ansible.builtin.slurp:
        src: "{{ pki_ca_path }}certs/{{ pki_server_host }}.pem"
      when: certificate_exists.stat.exists
      register: certificate

    - name: Sign certificate with our CA
      become: true
      community.crypto.x509_certificate_pipe:
        content: "{{ (certificate.content | b64decode) if certificate_exists.stat.exists else omit }}"
        csr_content: "{{ csr.csr }}"
        provider: ownca
        ownca_path: "{{ pki_ca_path }}certs/{{ pki_ca_file }}"
        ownca_privatekey_path: "{{ pki_ca_path }}private/ca-{{ pki_ca_name }}.key"
        ownca_privatekey_passphrase: "{{ pki_ca_secret_passphrase }}"
        ownca_not_after: +365d  # valid for one year
        ownca_not_before: "-1d"  # valid since yesterday
      register: certificate
      notify:
        - Write certificate file

    - name: Force write certificate
      ansible.builtin.meta: flush_handlers

    - name: Read the public certificate on CA
      become: true
      ansible.builtin.slurp:
        src: "{{ pki_ca_path }}certs/{{ pki_server_host }}.pem"
      register: public_certificate

    - name: Read the private certificate on CA
      become: true
      ansible.builtin.slurp:
        src: "{{ pki_ca_path }}private/{{ pki_server_host }}.key"
      register: private_certificate

- name: Write public certificate file on server
  become: true
  ansible.builtin.copy:
    dest: "{{ pki_path }}certs/{{ pki_server_host }}.pem"
    content: "{{ public_certificate.content | b64decode }}"
    owner: '{{ pki_server_owner }}'
    group: '{{ pki_server_owner }}'
    mode: '{{ pki_server_mode }}'

- name: Write private certificate file on server
  become: true
  ansible.builtin.copy:
    dest: "{{ pki_server_private }}{{ pki_server_host }}.key"
    content: "{{ private_certificate.content | b64decode }}"
    owner: '{{ pki_server_owner }}'
    group: '{{ pki_server_owner }}'
    mode: '{{ pki_server_mode }}'
